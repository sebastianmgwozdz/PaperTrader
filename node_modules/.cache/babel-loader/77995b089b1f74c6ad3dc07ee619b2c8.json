{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangwozdz/Desktop/papertrader/src/Window.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { get } from \"./Helpers\";\nimport Positions from \"./PositionsComponents/Positions\";\nimport Account from \"./Account\";\nimport Companies from \"./CompaniesComponents/Companies\";\nimport EarningsCalendar from \"./CalendarComponents/EarningsCalendar\";\nimport PositionSummary from \"./PositionsComponents/PositionSummary\";\nexport default function Window(props) {\n  const [marketData, setMarketData] = useState([]);\n  const [selectedStock, setSelectedStock] = useState(\"\");\n  useEffect(() => {\n    function update() {\n      let q = getData(\"QQQ\");\n      let d = getData(\"DIA\");\n      let s = getData(\"SPY\");\n      Promise.all([q, d, s]).then(values => {\n        setMarketData({\n          QQQ: Object.values(values[0])[1],\n          DIA: Object.values(values[1])[1],\n          SPY: Object.values(values[2])[1]\n        });\n      });\n    }\n\n    update();\n    let timer = setInterval(update, 300000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  useEffect(() => {\n    setSelectedStock(\"\");\n  }, [props.menuOption]);\n\n  async function getData(symbol) {\n    return await get(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\" + symbol + \"&interval=5min&outputsize=full&apikey=MZVTEZTGKT653IH3\");\n  }\n\n  if (selectedStock) {\n    return /*#__PURE__*/React.createElement(PositionSummary, {\n      returnFunc: setSelectedStock,\n      ticker: selectedStock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    });\n  }\n\n  let views = [/*#__PURE__*/React.createElement(Positions, {\n    marketData: marketData,\n    setSelectedStock: setSelectedStock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Companies, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(EarningsCalendar, {\n    setSelectedStock: setSelectedStock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"view5\")];\n  return views[props.menuOption];\n}","map":{"version":3,"sources":["/Users/sebastiangwozdz/Desktop/papertrader/src/Window.js"],"names":["React","useState","useEffect","get","Positions","Account","Companies","EarningsCalendar","PositionSummary","Window","props","marketData","setMarketData","selectedStock","setSelectedStock","update","q","getData","d","s","Promise","all","then","values","QQQ","Object","DIA","SPY","timer","setInterval","clearInterval","menuOption","symbol","views"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASa,MAAT,GAAkB;AAChB,UAAIC,CAAC,GAAGC,OAAO,CAAC,KAAD,CAAf;AACA,UAAIC,CAAC,GAAGD,OAAO,CAAC,KAAD,CAAf;AACA,UAAIE,CAAC,GAAGF,OAAO,CAAC,KAAD,CAAf;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACL,CAAD,EAAIE,CAAJ,EAAOC,CAAP,CAAZ,EAAuBG,IAAvB,CAA6BC,MAAD,IAAY;AACtCX,QAAAA,aAAa,CAAC;AACZY,UAAAA,GAAG,EAAEC,MAAM,CAACF,MAAP,CAAcA,MAAM,CAAC,CAAD,CAApB,EAAyB,CAAzB,CADO;AAEZG,UAAAA,GAAG,EAAED,MAAM,CAACF,MAAP,CAAcA,MAAM,CAAC,CAAD,CAApB,EAAyB,CAAzB,CAFO;AAGZI,UAAAA,GAAG,EAAEF,MAAM,CAACF,MAAP,CAAcA,MAAM,CAAC,CAAD,CAApB,EAAyB,CAAzB;AAHO,SAAD,CAAb;AAKD,OAND;AAOD;;AAEDR,IAAAA,MAAM;AAEN,QAAIa,KAAK,GAAGC,WAAW,CAACd,MAAD,EAAS,MAAT,CAAvB;AAEA,WAAO,MAAM;AACXe,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA1B,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAFQ,EAEN,CAACJ,KAAK,CAACqB,UAAP,CAFM,CAAT;;AAIA,iBAAed,OAAf,CAAuBe,MAAvB,EAA+B;AAC7B,WAAO,MAAM7B,GAAG,CACd,4EACE6B,MADF,GAEE,wDAHY,CAAhB;AAKD;;AAED,MAAInB,aAAJ,EAAmB;AACjB,wBACE,oBAAC,eAAD;AACE,MAAA,UAAU,EAAEC,gBADd;AAEE,MAAA,MAAM,EAAED,aAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAED,MAAIoB,KAAK,GAAG,cACV,oBAAC,SAAD;AACE,IAAA,UAAU,EAAEtB,UADd;AAEE,IAAA,gBAAgB,EAAEG,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,eAKV,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALU,eAMV,oBAAC,gBAAD;AAAkB,IAAA,gBAAgB,EAAEA,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANU,eAOV,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPU,eAQV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARU,CAAZ;AAWA,SAAOmB,KAAK,CAACvB,KAAK,CAACqB,UAAP,CAAZ;AACD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { get } from \"./Helpers\";\nimport Positions from \"./PositionsComponents/Positions\";\nimport Account from \"./Account\";\nimport Companies from \"./CompaniesComponents/Companies\";\nimport EarningsCalendar from \"./CalendarComponents/EarningsCalendar\";\nimport PositionSummary from \"./PositionsComponents/PositionSummary\";\n\nexport default function Window(props) {\n  const [marketData, setMarketData] = useState([]);\n  const [selectedStock, setSelectedStock] = useState(\"\");\n\n  useEffect(() => {\n    function update() {\n      let q = getData(\"QQQ\");\n      let d = getData(\"DIA\");\n      let s = getData(\"SPY\");\n\n      Promise.all([q, d, s]).then((values) => {\n        setMarketData({\n          QQQ: Object.values(values[0])[1],\n          DIA: Object.values(values[1])[1],\n          SPY: Object.values(values[2])[1],\n        });\n      });\n    }\n\n    update();\n\n    let timer = setInterval(update, 300000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  useEffect(() => {\n    setSelectedStock(\"\");\n  }, [props.menuOption]);\n\n  async function getData(symbol) {\n    return await get(\n      \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\" +\n        symbol +\n        \"&interval=5min&outputsize=full&apikey=MZVTEZTGKT653IH3\"\n    );\n  }\n\n  if (selectedStock) {\n    return (\n      <PositionSummary\n        returnFunc={setSelectedStock}\n        ticker={selectedStock}\n      ></PositionSummary>\n    );\n  }\n\n  let views = [\n    <Positions\n      marketData={marketData}\n      setSelectedStock={setSelectedStock}\n    ></Positions>,\n    <Companies></Companies>,\n    <EarningsCalendar setSelectedStock={setSelectedStock}></EarningsCalendar>,\n    <Account></Account>,\n    <div>view5</div>,\n  ];\n\n  return views[props.menuOption];\n}\n"]},"metadata":{},"sourceType":"module"}