{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangwozdz/Desktop/papertrader/src/PositionsComponents/AntInput.js\";\nimport React from \"react\";\nimport { Input } from \"antd\";\nimport { get } from \"../Helpers\";\nimport { withFirebase } from \"../Firebase\";\n\nfunction AntInput(props) {\n  async function sharesOwned(long) {\n    let shares = 0;\n    await get(\"http://localhost:8080/positions/id=\" + props.firebase.auth.currentUser.uid + \"/ticker=\" + props.ticker + \"/active\").then(res => {\n      for (let pos of res) {\n        if (pos[\"isLong\"] === long) {\n          shares += pos[\"remaining\"];\n        }\n      }\n    });\n    return shares;\n  }\n\n  function onChange(data) {\n    let input = data.target.value;\n\n    if (isNaN(input) || input == 0) {\n      console.log(\"t\");\n      return;\n    } else if (!input) {\n      props.setVal(null);\n    }\n\n    switch (props.type) {\n      case 0:\n        if (props.balance - props.price * input >= 0) {\n          props.setVal(input);\n        }\n\n        break;\n\n      case 1:\n        sharesOwned(true).then(res => {\n          if (res >= input) {\n            props.setVal(input);\n          }\n        });\n        break;\n\n      case 2:\n        props.setVal(input);\n        break;\n\n      default:\n        sharesOwned(false).then(res => {\n          if (res >= input) {\n            props.setVal(input);\n          }\n        });\n        break;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Input, {\n    onChange: data => {\n      onChange(data);\n    },\n    value: props.quantity,\n    style: props.style,\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default withFirebase(AntInput);","map":{"version":3,"sources":["/Users/sebastiangwozdz/Desktop/papertrader/src/PositionsComponents/AntInput.js"],"names":["React","Input","get","withFirebase","AntInput","props","sharesOwned","long","shares","firebase","auth","currentUser","uid","ticker","then","res","pos","onChange","data","input","target","value","isNaN","console","log","setVal","type","balance","price","quantity","style"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,iBAAeC,WAAf,CAA2BC,IAA3B,EAAiC;AAC/B,QAAIC,MAAM,GAAG,CAAb;AAEA,UAAMN,GAAG,CACP,wCACEG,KAAK,CAACI,QAAN,CAAeC,IAAf,CAAoBC,WAApB,CAAgCC,GADlC,GAEE,UAFF,GAGEP,KAAK,CAACQ,MAHR,GAIE,SALK,CAAH,CAMJC,IANI,CAMEC,GAAD,IAAS;AACd,WAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,YAAIC,GAAG,CAAC,QAAD,CAAH,KAAkBT,IAAtB,EAA4B;AAC1BC,UAAAA,MAAM,IAAIQ,GAAG,CAAC,WAAD,CAAb;AACD;AACF;AACF,KAZK,CAAN;AAcA,WAAOR,MAAP;AACD;;AAED,WAASS,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,QAAIC,KAAK,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAAxB;;AACA,QAAIC,KAAK,CAACH,KAAD,CAAL,IAAgBA,KAAK,IAAI,CAA7B,EAAgC;AAC9BI,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA;AACD,KAHD,MAGO,IAAI,CAACL,KAAL,EAAY;AACjBd,MAAAA,KAAK,CAACoB,MAAN,CAAa,IAAb;AACD;;AACD,YAAQpB,KAAK,CAACqB,IAAd;AACE,WAAK,CAAL;AACE,YAAIrB,KAAK,CAACsB,OAAN,GAAgBtB,KAAK,CAACuB,KAAN,GAAcT,KAA9B,IAAuC,CAA3C,EAA8C;AAC5Cd,UAAAA,KAAK,CAACoB,MAAN,CAAaN,KAAb;AACD;;AACD;;AACF,WAAK,CAAL;AACEb,QAAAA,WAAW,CAAC,IAAD,CAAX,CAAkBQ,IAAlB,CAAwBC,GAAD,IAAS;AAC9B,cAAIA,GAAG,IAAII,KAAX,EAAkB;AAChBd,YAAAA,KAAK,CAACoB,MAAN,CAAaN,KAAb;AACD;AACF,SAJD;AAMA;;AACF,WAAK,CAAL;AACEd,QAAAA,KAAK,CAACoB,MAAN,CAAaN,KAAb;AACA;;AACF;AACEb,QAAAA,WAAW,CAAC,KAAD,CAAX,CAAmBQ,IAAnB,CAAyBC,GAAD,IAAS;AAC/B,cAAIA,GAAG,IAAII,KAAX,EAAkB;AAChBd,YAAAA,KAAK,CAACoB,MAAN,CAAaN,KAAb;AACD;AACF,SAJD;AAKA;AAvBJ;AAyBD;;AAED,sBACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAGD,IAAD,IAAU;AAClBD,MAAAA,QAAQ,CAACC,IAAD,CAAR;AACD,KAHH;AAIE,IAAA,KAAK,EAAEb,KAAK,CAACwB,QAJf;AAKE,IAAA,KAAK,EAAExB,KAAK,CAACyB,KALf;AAME,IAAA,UAAU,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD;;AAED,eAAe3B,YAAY,CAACC,QAAD,CAA3B","sourcesContent":["import React from \"react\";\nimport { Input } from \"antd\";\nimport { get } from \"../Helpers\";\nimport { withFirebase } from \"../Firebase\";\n\nfunction AntInput(props) {\n  async function sharesOwned(long) {\n    let shares = 0;\n\n    await get(\n      \"http://localhost:8080/positions/id=\" +\n        props.firebase.auth.currentUser.uid +\n        \"/ticker=\" +\n        props.ticker +\n        \"/active\"\n    ).then((res) => {\n      for (let pos of res) {\n        if (pos[\"isLong\"] === long) {\n          shares += pos[\"remaining\"];\n        }\n      }\n    });\n\n    return shares;\n  }\n\n  function onChange(data) {\n    let input = data.target.value;\n    if (isNaN(input) || input == 0) {\n      console.log(\"t\");\n      return;\n    } else if (!input) {\n      props.setVal(null);\n    }\n    switch (props.type) {\n      case 0:\n        if (props.balance - props.price * input >= 0) {\n          props.setVal(input);\n        }\n        break;\n      case 1:\n        sharesOwned(true).then((res) => {\n          if (res >= input) {\n            props.setVal(input);\n          }\n        });\n\n        break;\n      case 2:\n        props.setVal(input);\n        break;\n      default:\n        sharesOwned(false).then((res) => {\n          if (res >= input) {\n            props.setVal(input);\n          }\n        });\n        break;\n    }\n  }\n\n  return (\n    <Input\n      onChange={(data) => {\n        onChange(data);\n      }}\n      value={props.quantity}\n      style={props.style}\n      allowClear\n    />\n  );\n}\n\nexport default withFirebase(AntInput);\n"]},"metadata":{},"sourceType":"module"}