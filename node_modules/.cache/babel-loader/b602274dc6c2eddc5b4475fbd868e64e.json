{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangwozdz/Desktop/papertrader/src/CalendarComponents/EarningsCalendar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Tabs, Badge } from \"antd\";\nimport { get } from \"../Helpers\";\nconst {\n  TabPane\n} = Tabs;\nexport default function EarningsCalendar() {\n  const [earnings, setEarnings] = useState(undefined);\n  useEffect(() => {\n    let start = Date.now();\n    let end = start + 2628000000;\n    let startForm = new Date(start).toISOString().substring(0, 10);\n    let endForm = new Date(end).toISOString().substring(0, 10);\n    get(\"https://finnhub.io/api/v1/calendar/earnings?from=\" + startForm + \"&to=\" + endForm + \"&token=bpleiinrh5r8m26im1dg\").then(res => {\n      if (res) {\n        setEarnings(getMapped(res[\"earningsCalendar\"]));\n      }\n    });\n  }, []);\n\n  function getMapped(earnings) {\n    let m = new Map();\n\n    for (let e of earnings) {\n      let date = e[\"date\"];\n\n      if (m.has(date)) {\n        m.get(date).push(e);\n      } else {\n        m.set(date, [e]);\n      }\n    }\n\n    return m;\n  }\n\n  function getBadgeColor(value) {\n    let hour = value[\"hour\"];\n\n    switch (hour) {\n      case \"bmo\":\n        return \"red\";\n\n      case \"dmh\":\n        return \"green\";\n\n      default:\n        return \"blue\";\n    }\n  }\n\n  function getListData(date) {\n    let arr = earnings.get(date);\n    let data = arr.map(val => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: val[\"symbol\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Badge, {\n        color: getBadgeColor(val),\n        text: val[\"symbol\"],\n        style: {\n          paddingLeft: \"6vw\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, data.slice(0, data.length / 2)), /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, data.slice(data.length / 2, data.length)));\n  }\n\n  function getTabs() {\n    if (!earnings) {\n      return [];\n    }\n\n    let t = [];\n    let arr = Array.from(earnings.keys()).sort((a, b) => {\n      return a.localeCompare(b);\n    });\n\n    for (let i = 0; i < arr.length; i++) {\n      let date = arr[i];\n      t.push( /*#__PURE__*/React.createElement(TabPane, {\n        tab: date,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, getListData(date))));\n    }\n\n    return t;\n  }\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, getTabs())); //return <div>{getListData()}</div>;\n}","map":{"version":3,"sources":["/Users/sebastiangwozdz/Desktop/papertrader/src/CalendarComponents/EarningsCalendar.js"],"names":["React","useState","useEffect","Card","Tabs","Badge","get","TabPane","EarningsCalendar","earnings","setEarnings","undefined","start","Date","now","end","startForm","toISOString","substring","endForm","then","res","getMapped","m","Map","e","date","has","push","set","getBadgeColor","value","hour","getListData","arr","data","map","val","paddingLeft","float","slice","length","getTabs","t","Array","from","keys","sort","a","b","localeCompare","i","width","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Tabs, Badge } from \"antd\";\nimport { get } from \"../Helpers\";\n\nconst { TabPane } = Tabs;\n\nexport default function EarningsCalendar() {\n  const [earnings, setEarnings] = useState(undefined);\n\n  useEffect(() => {\n    let start = Date.now();\n    let end = start + 2628000000;\n\n    let startForm = new Date(start).toISOString().substring(0, 10);\n    let endForm = new Date(end).toISOString().substring(0, 10);\n\n    get(\n      \"https://finnhub.io/api/v1/calendar/earnings?from=\" +\n        startForm +\n        \"&to=\" +\n        endForm +\n        \"&token=bpleiinrh5r8m26im1dg\"\n    ).then((res) => {\n      if (res) {\n        setEarnings(getMapped(res[\"earningsCalendar\"]));\n      }\n    });\n  }, []);\n\n  function getMapped(earnings) {\n    let m = new Map();\n    for (let e of earnings) {\n      let date = e[\"date\"];\n      if (m.has(date)) {\n        m.get(date).push(e);\n      } else {\n        m.set(date, [e]);\n      }\n    }\n    return m;\n  }\n\n  function getBadgeColor(value) {\n    let hour = value[\"hour\"];\n\n    switch (hour) {\n      case \"bmo\":\n        return \"red\";\n      case \"dmh\":\n        return \"green\";\n      default:\n        return \"blue\";\n    }\n  }\n\n  function getListData(date) {\n    let arr = earnings.get(date);\n\n    let data = arr.map((val) => {\n      return (\n        <div key={val[\"symbol\"]}>\n          <Badge\n            color={getBadgeColor(val)}\n            text={val[\"symbol\"]}\n            style={{ paddingLeft: \"6vw\" }}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <span>\n        <ul style={{ float: \"left\" }}>{data.slice(0, data.length / 2)}</ul>\n        <ul style={{ float: \"left\" }}>\n          {data.slice(data.length / 2, data.length)}\n        </ul>\n      </span>\n    );\n  }\n\n  function getTabs() {\n    if (!earnings) {\n      return [];\n    }\n\n    let t = [];\n\n    let arr = Array.from(earnings.keys()).sort((a, b) => {\n      return a.localeCompare(b);\n    });\n\n    for (let i = 0; i < arr.length; i++) {\n      let date = arr[i];\n\n      t.push(\n        <TabPane tab={date} key={i}>\n          <Card>{getListData(date)}</Card>\n        </TabPane>\n      );\n    }\n\n    return t;\n  }\n\n  return (\n    <header\n      style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}\n    >\n      <Tabs defaultActiveKey=\"1\">{getTabs()}</Tabs>\n    </header>\n  );\n  //return <div>{getListData()}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}