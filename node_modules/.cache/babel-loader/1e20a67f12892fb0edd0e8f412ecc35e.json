{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangwozdz/Desktop/papertrader/src/PositionsComponents/ActivePositions.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Tag } from \"antd\";\nimport { get, post, close } from \"../Helpers\";\nimport { withFirebase } from \"../Firebase\";\nconst columns = [{\n  title: \"Date\",\n  dataIndex: \"date\",\n  key: \"date\"\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  key: \"price\"\n}, {\n  title: \"Initial\",\n  dataIndex: \"initial\",\n  key: \"initial\"\n}, {\n  title: \"Remaining\",\n  dataIndex: \"remaining\",\n  key: \"remaining\"\n}, {\n  title: \"Type\",\n  key: \"type\",\n  dataIndex: \"tags\",\n  render: tags => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, tags.map(tag => {\n    let color = tag === \"Buy\" ? \"green\" : \"red\";\n    return /*#__PURE__*/React.createElement(Tag, {\n      color: color,\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, tag.toUpperCase());\n  }))\n}, {\n  title: \"\",\n  key: \"action\",\n  dataIndex: \"action\",\n  render: param => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: param.func,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, param.text))\n}];\n\nfunction localTime(utc) {\n  let local = utc.valueOf();\n  let offset = utc.getTimezoneOffset() * 60 * 1000;\n  local -= offset;\n  return new Date(local);\n}\n\nfunction formattedDate(date) {\n  return date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n}\n\nfunction ActivePositions(props) {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    get(\"http://localhost:8080/positions/id=\" + props.firebase.auth.currentUser.uid + \"/ticker=\" + props.ticker + \"/active\").then(res => {\n      setData(res);\n    });\n  }, []);\n\n  function formattedData() {\n    return data.map((entry, index) => {\n      let date = localTime(new Date(entry[\"openDate\"]));\n      console.log(entry[\"price\"] / 100);\n      return {\n        key: index,\n        date: formattedDate(date),\n        price: entry[\"price\"] / 100,\n        initial: entry[\"initial\"],\n        remaining: entry[\"remaining\"],\n        tags: [entry[\"isLong\"] ? \"Buy\" : \"Short\"],\n        long: entry[\"isLong\"],\n        action: {\n          text: entry[\"isLong\"] ? \"Sell All\" : \"Cover All\",\n          func: () => {\n            action(index);\n          }\n        }\n      };\n    }).reverse();\n  }\n\n  function incrementBalance(amt) {\n    get(\"http://localhost:8080/balances/\" + props.firebase.auth.currentUser.uid).then(bal => {\n      let b = {\n        userId: props.firebase.auth.currentUser.uid,\n        amount: bal[\"amount\"] + amt\n      };\n      post(\"http://localhost:8080/balances/\", b);\n    });\n  }\n\n  function action(id) {\n    let pos = data[id];\n    get(\"https://finnhub.io/api/v1/quote?symbol=\" + props.ticker + \"&token=bpleiinrh5r8m26im1dg\").then(curr => {\n      let trade = {\n        user: props.firebase.auth.currentUser.uid,\n        type: pos.isLong ? 1 : 3,\n        price: curr[\"c\"] * 100,\n        shareCount: pos.remaining,\n        ticker: props.ticker,\n        positions: [pos]\n      };\n      close(trade, incrementBalance).then(() => {\n        let arr = data.slice(0, id).concat(data.slice(id + 1));\n        setData(arr);\n        props.incrementTick();\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: formattedData(),\n    style: props.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default withFirebase(ActivePositions);","map":{"version":3,"sources":["/Users/sebastiangwozdz/Desktop/papertrader/src/PositionsComponents/ActivePositions.js"],"names":["React","useEffect","useState","Table","Tag","get","post","close","withFirebase","columns","title","dataIndex","key","render","tags","map","tag","color","toUpperCase","param","func","text","localTime","utc","local","valueOf","offset","getTimezoneOffset","Date","formattedDate","date","getMonth","getDate","getFullYear","ActivePositions","props","data","setData","firebase","auth","currentUser","uid","ticker","then","res","formattedData","entry","index","console","log","price","initial","remaining","long","action","reverse","incrementBalance","amt","bal","b","userId","amount","id","pos","curr","trade","user","type","isLong","shareCount","positions","arr","slice","concat","incrementTick","style"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table, Tag } from \"antd\";\nimport { get, post, close } from \"../Helpers\";\nimport { withFirebase } from \"../Firebase\";\n\nconst columns = [\n  {\n    title: \"Date\",\n    dataIndex: \"date\",\n    key: \"date\",\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n  },\n  {\n    title: \"Initial\",\n    dataIndex: \"initial\",\n    key: \"initial\",\n  },\n  {\n    title: \"Remaining\",\n    dataIndex: \"remaining\",\n    key: \"remaining\",\n  },\n  {\n    title: \"Type\",\n    key: \"type\",\n    dataIndex: \"tags\",\n    render: (tags) => (\n      <span>\n        {tags.map((tag) => {\n          let color = tag === \"Buy\" ? \"green\" : \"red\";\n\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n  {\n    title: \"\",\n    key: \"action\",\n    dataIndex: \"action\",\n    render: (param) => (\n      <span>\n        <a onClick={param.func}>{param.text}</a>\n      </span>\n    ),\n  },\n];\n\nfunction localTime(utc) {\n  let local = utc.valueOf();\n  let offset = utc.getTimezoneOffset() * 60 * 1000;\n  local -= offset;\n  return new Date(local);\n}\n\nfunction formattedDate(date) {\n  return date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n}\n\nfunction ActivePositions(props) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    get(\n      \"http://localhost:8080/positions/id=\" +\n        props.firebase.auth.currentUser.uid +\n        \"/ticker=\" +\n        props.ticker +\n        \"/active\"\n    ).then((res) => {\n      setData(res);\n    });\n  }, []);\n\n  function formattedData() {\n    return data\n      .map((entry, index) => {\n        let date = localTime(new Date(entry[\"openDate\"]));\n\n        console.log(entry[\"price\"] / 100);\n\n        return {\n          key: index,\n          date: formattedDate(date),\n          price: entry[\"price\"] / 100,\n          initial: entry[\"initial\"],\n          remaining: entry[\"remaining\"],\n          tags: [entry[\"isLong\"] ? \"Buy\" : \"Short\"],\n          long: entry[\"isLong\"],\n          action: {\n            text: entry[\"isLong\"] ? \"Sell All\" : \"Cover All\",\n            func: () => {\n              action(index);\n            },\n          },\n        };\n      })\n      .reverse();\n  }\n\n  function incrementBalance(amt) {\n    get(\n      \"http://localhost:8080/balances/\" + props.firebase.auth.currentUser.uid\n    ).then((bal) => {\n      let b = {\n        userId: props.firebase.auth.currentUser.uid,\n        amount: bal[\"amount\"] + amt,\n      };\n\n      post(\"http://localhost:8080/balances/\", b);\n    });\n  }\n\n  function action(id) {\n    let pos = data[id];\n    get(\n      \"https://finnhub.io/api/v1/quote?symbol=\" +\n        props.ticker +\n        \"&token=bpleiinrh5r8m26im1dg\"\n    ).then((curr) => {\n      let trade = {\n        user: props.firebase.auth.currentUser.uid,\n        type: pos.isLong ? 1 : 3,\n        price: curr[\"c\"] * 100,\n        shareCount: pos.remaining,\n        ticker: props.ticker,\n        positions: [pos],\n      };\n\n      close(trade, incrementBalance).then(() => {\n        let arr = data.slice(0, id).concat(data.slice(id + 1));\n        setData(arr);\n        props.incrementTick();\n      });\n    });\n  }\n\n  return (\n    <Table columns={columns} dataSource={formattedData()} style={props.style} />\n  );\n}\n\nexport default withFirebase(ActivePositions);\n"]},"metadata":{},"sourceType":"module"}