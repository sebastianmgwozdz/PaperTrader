{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangwozdz/Desktop/papertrader/src/PositionsComponents/Graph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { YAxis, ReferenceLine, Line, LineChart, Area, AreaChart } from \"recharts\";\nimport { isOpen } from \"../Helpers\";\nconst GRAY = \"#787777\";\nconst GREEN = \"#24e361\";\nconst RED = \"#f55936\";\nexport default function Graph(props) {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (!isNaN(props.dataPoint) && isOpen(new Date())) {\n      data.push({\n        val: props.dataPoint\n      });\n    } else if (props.data) {\n      setData(props.data);\n    }\n  }, [props.data, props.dataPoint, props.positions]);\n\n  function minMax() {\n    let arr = data.map(dp => {\n      return dp.val;\n    });\n    let incl = [...arr, props.reference];\n    let min = Math.min.apply(Math, incl);\n    let max = Math.max.apply(Math, incl);\n    let diff = max - min;\n    return [min - diff / 4, max + diff / 4];\n  }\n\n  function ticks(domain) {\n    let t = [];\n    let diff = domain[1] - domain[0];\n    let gap = Math.round(diff / 3);\n\n    for (let i = Math.floor(domain[0]); i <= Math.ceil(domain[1]); i += gap) {\n      t.push(Math.round(i));\n    }\n\n    return t;\n  }\n\n  if (data.length <= 1) {\n    return null;\n  }\n\n  let color;\n  let diff = data[data.length - 1][\"val\"] - props.reference;\n\n  if (Math.abs(diff) < 0.005) {\n    color = GRAY;\n  } else {\n    color = diff > 0 ? GREEN : RED;\n  }\n\n  let domain = minMax();\n  return /*#__PURE__*/React.createElement(AreaChart, {\n    width: props.width ? props.width : 350,\n    height: props.height ? props.height : 155,\n    data: data,\n    margin: {\n      top: 15,\n      left: 15,\n      right: 25,\n      bottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"colorUv\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: color,\n    stopOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: color,\n    stopOpacity: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(YAxis, {\n    type: \"number\",\n    domain: minMax(),\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: props.reference,\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"val\",\n    stroke: color,\n    dot: false,\n    isAnimationActive: false,\n    strokeWidth: props.strokeWidth,\n    fillOpacity: 1,\n    fill: \"url(#colorUv)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sebastiangwozdz/Desktop/papertrader/src/PositionsComponents/Graph.js"],"names":["React","useState","useEffect","YAxis","ReferenceLine","Line","LineChart","Area","AreaChart","isOpen","GRAY","GREEN","RED","Graph","props","data","setData","isNaN","dataPoint","Date","push","val","positions","minMax","arr","map","dp","incl","reference","min","Math","apply","max","diff","ticks","domain","t","gap","round","i","floor","ceil","length","color","abs","width","height","top","left","right","bottom","strokeWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,KADF,EAEEC,aAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,SANF,QAOO,UAPP;AAQA,SAASC,MAAT,QAAuB,YAAvB;AAEA,MAAMC,IAAI,GAAG,SAAb;AACA,MAAMC,KAAK,GAAG,SAAd;AACA,MAAMC,GAAG,GAAG,SAAZ;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACe,KAAK,CAACH,KAAK,CAACI,SAAP,CAAN,IAA2BT,MAAM,CAAC,IAAIU,IAAJ,EAAD,CAArC,EAAmD;AACjDJ,MAAAA,IAAI,CAACK,IAAL,CAAU;AACRC,QAAAA,GAAG,EAAEP,KAAK,CAACI;AADH,OAAV;AAGD,KAJD,MAIO,IAAIJ,KAAK,CAACC,IAAV,EAAgB;AACrBC,MAAAA,OAAO,CAACF,KAAK,CAACC,IAAP,CAAP;AACD;AACF,GARQ,EAQN,CAACD,KAAK,CAACC,IAAP,EAAaD,KAAK,CAACI,SAAnB,EAA8BJ,KAAK,CAACQ,SAApC,CARM,CAAT;;AAUA,WAASC,MAAT,GAAkB;AAChB,QAAIC,GAAG,GAAGT,IAAI,CAACU,GAAL,CAAUC,EAAD,IAAQ;AACzB,aAAOA,EAAE,CAACL,GAAV;AACD,KAFS,CAAV;AAGA,QAAIM,IAAI,GAAG,CAAC,GAAGH,GAAJ,EAASV,KAAK,CAACc,SAAf,CAAX;AACA,QAAIC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASE,KAAT,CAAeD,IAAf,EAAqBH,IAArB,CAAV;AACA,QAAIK,GAAG,GAAGF,IAAI,CAACE,GAAL,CAASD,KAAT,CAAeD,IAAf,EAAqBH,IAArB,CAAV;AAEA,QAAIM,IAAI,GAAGD,GAAG,GAAGH,GAAjB;AAEA,WAAO,CAACA,GAAG,GAAGI,IAAI,GAAG,CAAd,EAAiBD,GAAG,GAAGC,IAAI,GAAG,CAA9B,CAAP;AACD;;AAED,WAASC,KAAT,CAAeC,MAAf,EAAuB;AACrB,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIH,IAAI,GAAGE,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAA7B;AACA,QAAIE,GAAG,GAAGP,IAAI,CAACQ,KAAL,CAAWL,IAAI,GAAG,CAAlB,CAAV;;AAEA,SAAK,IAAIM,CAAC,GAAGT,IAAI,CAACU,KAAL,CAAWL,MAAM,CAAC,CAAD,CAAjB,CAAb,EAAoCI,CAAC,IAAIT,IAAI,CAACW,IAAL,CAAUN,MAAM,CAAC,CAAD,CAAhB,CAAzC,EAA+DI,CAAC,IAAIF,GAApE,EAAyE;AACvED,MAAAA,CAAC,CAAChB,IAAF,CAAOU,IAAI,CAACQ,KAAL,CAAWC,CAAX,CAAP;AACD;;AACD,WAAOH,CAAP;AACD;;AAED,MAAIrB,IAAI,CAAC2B,MAAL,IAAe,CAAnB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAIC,KAAJ;AACA,MAAIV,IAAI,GAAGlB,IAAI,CAACA,IAAI,CAAC2B,MAAL,GAAc,CAAf,CAAJ,CAAsB,KAAtB,IAA+B5B,KAAK,CAACc,SAAhD;;AAEA,MAAIE,IAAI,CAACc,GAAL,CAASX,IAAT,IAAiB,KAArB,EAA4B;AAC1BU,IAAAA,KAAK,GAAGjC,IAAR;AACD,GAFD,MAEO;AACLiC,IAAAA,KAAK,GAAGV,IAAI,GAAG,CAAP,GAAWtB,KAAX,GAAmBC,GAA3B;AACD;;AAED,MAAIuB,MAAM,GAAGZ,MAAM,EAAnB;AAEA,sBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAET,KAAK,CAAC+B,KAAN,GAAc/B,KAAK,CAAC+B,KAApB,GAA4B,GADrC;AAEE,IAAA,MAAM,EAAE/B,KAAK,CAACgC,MAAN,GAAehC,KAAK,CAACgC,MAArB,GAA8B,GAFxC;AAGE,IAAA,IAAI,EAAE/B,IAHR;AAIE,IAAA,MAAM,EAAE;AAAEgC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,KAAK,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAgB,IAAA,EAAE,EAAC,SAAnB;AAA6B,IAAA,EAAE,EAAC,GAAhC;AAAoC,IAAA,EAAE,EAAC,GAAvC;AAA2C,IAAA,EAAE,EAAC,GAA9C;AAAkD,IAAA,EAAE,EAAC,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,MAAM,EAAC,IAAb;AAAkB,IAAA,SAAS,EAAEP,KAA7B;AAAoC,IAAA,WAAW,EAAE,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,MAAM,EAAC,KAAb;AAAmB,IAAA,SAAS,EAAEA,KAA9B;AAAqC,IAAA,WAAW,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CANF,eAYE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,MAAM,EAAEpB,MAAM,EAAnC;AAAuC,IAAA,IAAI,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAcE,oBAAC,aAAD;AAAe,IAAA,CAAC,EAAET,KAAK,CAACc,SAAxB;AAAmC,IAAA,eAAe,EAAC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAC,KAFV;AAGE,IAAA,MAAM,EAAEe,KAHV;AAIE,IAAA,GAAG,EAAE,KAJP;AAKE,IAAA,iBAAiB,EAAE,KALrB;AAME,IAAA,WAAW,EAAE7B,KAAK,CAACqC,WANrB;AAOE,IAAA,WAAW,EAAE,CAPf;AAQE,IAAA,IAAI,EAAC,eARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AA4BD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  YAxis,\n  ReferenceLine,\n  Line,\n  LineChart,\n  Area,\n  AreaChart,\n} from \"recharts\";\nimport { isOpen } from \"../Helpers\";\n\nconst GRAY = \"#787777\";\nconst GREEN = \"#24e361\";\nconst RED = \"#f55936\";\n\nexport default function Graph(props) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (!isNaN(props.dataPoint) && isOpen(new Date())) {\n      data.push({\n        val: props.dataPoint,\n      });\n    } else if (props.data) {\n      setData(props.data);\n    }\n  }, [props.data, props.dataPoint, props.positions]);\n\n  function minMax() {\n    let arr = data.map((dp) => {\n      return dp.val;\n    });\n    let incl = [...arr, props.reference];\n    let min = Math.min.apply(Math, incl);\n    let max = Math.max.apply(Math, incl);\n\n    let diff = max - min;\n\n    return [min - diff / 4, max + diff / 4];\n  }\n\n  function ticks(domain) {\n    let t = [];\n    let diff = domain[1] - domain[0];\n    let gap = Math.round(diff / 3);\n\n    for (let i = Math.floor(domain[0]); i <= Math.ceil(domain[1]); i += gap) {\n      t.push(Math.round(i));\n    }\n    return t;\n  }\n\n  if (data.length <= 1) {\n    return null;\n  }\n\n  let color;\n  let diff = data[data.length - 1][\"val\"] - props.reference;\n\n  if (Math.abs(diff) < 0.005) {\n    color = GRAY;\n  } else {\n    color = diff > 0 ? GREEN : RED;\n  }\n\n  let domain = minMax();\n\n  return (\n    <AreaChart\n      width={props.width ? props.width : 350}\n      height={props.height ? props.height : 155}\n      data={data}\n      margin={{ top: 15, left: 15, right: 25, bottom: 10 }}\n    >\n      <defs>\n        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"5%\" stopColor={color} stopOpacity={0.8} />\n          <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n        </linearGradient>\n      </defs>\n      <YAxis type=\"number\" domain={minMax()} hide></YAxis>\n\n      <ReferenceLine y={props.reference} strokeDasharray=\"3 3\" />\n      <Area\n        type=\"monotone\"\n        dataKey=\"val\"\n        stroke={color}\n        dot={false}\n        isAnimationActive={false}\n        strokeWidth={props.strokeWidth}\n        fillOpacity={1}\n        fill=\"url(#colorUv)\"\n      />\n    </AreaChart>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}