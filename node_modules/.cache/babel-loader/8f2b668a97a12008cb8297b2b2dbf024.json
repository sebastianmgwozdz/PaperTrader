{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangwozdz/Desktop/papertrader/src/CompaniesComponents/SearchResults.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { get } from \"../Helpers\";\nexport default function SearchResults(props) {\n  const [stocks, setStocks] = useState([]);\n  const [profiles, setProfiles] = useState(undefined);\n  useEffect(() => {\n    get(\"https://finnhub.io/api/v1/stock/symbol?exchange=US&token=bpleiinrh5r8m26im1dg\").then(res => {\n      let r = new Map();\n\n      for (let stock of res) {\n        let symbol = stock[\"displaySymbol\"];\n\n        if (symbol.includes(props.searchText)) {\n          r.set(symbol, get(\"https://finnhub.io/api/v1/stock/profile2?symbol=AAPL&token=bpleiinrh5r8m26im1dg\"));\n        }\n      }\n\n      Promise.all(r.values()).then(vals => {\n        setProfiles(r);\n      });\n    });\n  }, []);\n\n  function results() {\n    if (!profiles) {\n      return [];\n    }\n\n    let res = [];\n    profiles.forEach((value, key, map) => {\n      console.log(Promise.resolve(value));\n      res.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => {\n          props.setSelectedStock(key);\n        },\n        style: {\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, key), /*#__PURE__*/React.createElement(\"img\", {\n        src: value[\"logo\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      })));\n    });\n    return res;\n  }\n\n  console.log(profiles);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, results());\n}","map":{"version":3,"sources":["/Users/sebastiangwozdz/Desktop/papertrader/src/CompaniesComponents/SearchResults.js"],"names":["React","useState","useEffect","get","SearchResults","props","stocks","setStocks","profiles","setProfiles","undefined","then","res","r","Map","stock","symbol","includes","searchText","set","Promise","all","values","vals","results","forEach","value","key","map","console","log","resolve","push","setSelectedStock","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACS,SAAD,CAAxC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,GAAG,CACD,+EADC,CAAH,CAEEQ,IAFF,CAEQC,GAAD,IAAS;AACd,UAAIC,CAAC,GAAG,IAAIC,GAAJ,EAAR;;AACA,WAAK,IAAIC,KAAT,IAAkBH,GAAlB,EAAuB;AACrB,YAAII,MAAM,GAAGD,KAAK,CAAC,eAAD,CAAlB;;AAEA,YAAIC,MAAM,CAACC,QAAP,CAAgBZ,KAAK,CAACa,UAAtB,CAAJ,EAAuC;AACrCL,UAAAA,CAAC,CAACM,GAAF,CACEH,MADF,EAEEb,GAAG,CACD,iFADC,CAFL;AAMD;AACF;;AAEDiB,MAAAA,OAAO,CAACC,GAAR,CAAYR,CAAC,CAACS,MAAF,EAAZ,EAAwBX,IAAxB,CAA8BY,IAAD,IAAU;AACrCd,QAAAA,WAAW,CAACI,CAAD,CAAX;AACD,OAFD;AAGD,KApBD;AAqBD,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,WAASW,OAAT,GAAmB;AACjB,QAAI,CAAChB,QAAL,EAAe;AACb,aAAO,EAAP;AACD;;AACD,QAAII,GAAG,GAAG,EAAV;AACAJ,IAAAA,QAAQ,CAACiB,OAAT,CAAiB,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,KAAqB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAO,CAACW,OAAR,CAAgBL,KAAhB,CAAZ;AACAd,MAAAA,GAAG,CAACoB,IAAJ,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,OAAO,EAAE,MAAM;AACb3B,UAAAA,KAAK,CAAC4B,gBAAN,CAAuBN,GAAvB;AACD,SAHH;AAIE,QAAA,KAAK,EAAE;AAAEO,UAAAA,QAAQ,EAAE;AAAZ,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGP,GANH,CADF,eASE;AAAK,QAAA,GAAG,EAAED,KAAK,CAAC,MAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAaD,KAfD;AAgBA,WAAOd,GAAP;AACD;;AAEDiB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMgB,OAAO,EAAb,CAAP;AACD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { get } from \"../Helpers\";\n\nexport default function SearchResults(props) {\n  const [stocks, setStocks] = useState([]);\n  const [profiles, setProfiles] = useState(undefined);\n\n  useEffect(() => {\n    get(\n      \"https://finnhub.io/api/v1/stock/symbol?exchange=US&token=bpleiinrh5r8m26im1dg\"\n    ).then((res) => {\n      let r = new Map();\n      for (let stock of res) {\n        let symbol = stock[\"displaySymbol\"];\n\n        if (symbol.includes(props.searchText)) {\n          r.set(\n            symbol,\n            get(\n              \"https://finnhub.io/api/v1/stock/profile2?symbol=AAPL&token=bpleiinrh5r8m26im1dg\"\n            )\n          );\n        }\n      }\n\n      Promise.all(r.values()).then((vals) => {\n        setProfiles(r);\n      });\n    });\n  }, []);\n\n  function results() {\n    if (!profiles) {\n      return [];\n    }\n    let res = [];\n    profiles.forEach((value, key, map) => {\n      console.log(Promise.resolve(value));\n      res.push(\n        <div>\n          <a\n            onClick={() => {\n              props.setSelectedStock(key);\n            }}\n            style={{ fontSize: 25 }}\n          >\n            {key}\n          </a>\n          <img src={value[\"logo\"]}></img>\n        </div>\n      );\n    });\n    return res;\n  }\n\n  console.log(profiles);\n\n  return <div>{results()}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}