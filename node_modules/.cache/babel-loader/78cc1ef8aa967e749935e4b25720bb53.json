{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangwozdz/Desktop/papertrader/src/PositionsComponents/BuyModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport Autocomplete from \"./Autocomplete\";\nimport AntRadio from \"./AntRadio\";\nimport AntInput from \"./AntInput\";\nimport { get, close, post } from \"../Helpers\";\nimport { withFirebase } from \"../Firebase\";\nimport { server } from \"../../links\";\nimport TradeText from \"./TradeText\";\nconst style = {\n  marginTop: \"2vh\",\n  marginBottom: \"1vh\"\n};\nconst radioStyle = {\n  marginTop: \"2vh\",\n  marginBottom: \"1vh\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  textAlign: \"center\"\n};\n\nfunction BuyModal(props) {\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [type, setType] = useState(0);\n  const [symbol, setSymbol] = useState(props.symbol);\n  const [quantity, setQuantity] = useState(0);\n  const [price, setPrice] = useState(props.price);\n\n  function onOk() {\n    setConfirmLoading(true);\n    makeTrade().then(reset);\n  }\n\n  useEffect(() => {\n    if (props.price) {\n      setPrice(props.price);\n    } else if (symbol) {\n      get(\"https://finnhub.io/api/v1/quote?symbol=\" + symbol + \"&token=bpleiinrh5r8m26im1dg\").then(res => {\n        if (res) {\n          setPrice(res[\"c\"] * 100);\n        }\n      });\n    } else {\n      setPrice(\"\");\n    }\n  }, [symbol, props.price]);\n\n  function reset() {\n    props.setVisible(false);\n    setConfirmLoading(false);\n    setType(0);\n\n    if (!props.symbol) {\n      setSymbol(\"\");\n    }\n\n    if (!props.price) {\n      setPrice(\"\");\n    }\n\n    setQuantity(0);\n  }\n\n  async function activePositions() {\n    let pos;\n    await get(server + \"positions/id=\" + props.firebase.auth.currentUser.uid + \"/ticker=\" + symbol + \"/active\").then(res => {\n      pos = res;\n    });\n    return pos;\n  }\n\n  function incrementBalance(val) {\n    let b = {\n      userId: props.firebase.auth.currentUser.uid,\n      amount: props.balance + val\n    };\n    post(server + \"balances/\", b).then(() => {\n      props.setBalance(b.amount);\n    });\n  }\n\n  async function makeTrade() {\n    if (type === 1 || type === 3) {\n      let mult = type === 1 ? 1 : -1;\n      activePositions().then(res => {\n        res.sort((a, b) => {\n          return mult * (a[\"price\"] - b[\"price\"]);\n        });\n        let trade = {\n          user: props.firebase.auth.currentUser.uid,\n          type: type,\n          price: price,\n          shareCount: quantity,\n          positions: res\n        };\n        close(trade, incrementBalance);\n      });\n    } else {\n      let long = type !== 2;\n      let position = {\n        ticker: symbol,\n        price: price,\n        initial: quantity,\n        remaining: quantity,\n        userId: props.firebase.auth.currentUser.uid,\n        isLong: long,\n        openDate: new Date()\n      };\n      post(server + \"positions/\", position);\n\n      if (long) {\n        incrementBalance(-1 * quantity * price);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: \"Make a Trade\",\n    visible: props.visible,\n    destroyOnClose: true,\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      key: \"back\",\n      onClick: reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: confirmLoading,\n      onClick: onOk,\n      disabled: !symbol || !quantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, \"Confirm\")],\n    closable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"2vh\",\n      fontSize: \"24px\",\n      marginBottom: \"5vh\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, price ? (price / 100).toFixed(2) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, props.symbol ? null : /*#__PURE__*/React.createElement(Autocomplete, {\n    setSymbol: setSymbol,\n    setQuantity: setQuantity,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(AntInput, {\n    setVal: setQuantity,\n    balance: props.balance,\n    price: price,\n    quantity: quantity,\n    type: type,\n    ticker: symbol,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AntRadio, {\n    labels: [\"Buy\", \"Sell\", \"Short\", \"Cover Short\"],\n    setVal: val => {\n      if (val !== type) {\n        setQuantity(0);\n      }\n\n      setType(val);\n    },\n    style: radioStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TradeText, {\n    symbol: symbol,\n    quantity: quantity,\n    price: price,\n    balance: props.balance,\n    type: type,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default withFirebase(BuyModal);","map":{"version":3,"sources":["/Users/sebastiangwozdz/Desktop/papertrader/src/PositionsComponents/BuyModal.js"],"names":["React","useState","useEffect","Modal","Button","Autocomplete","AntRadio","AntInput","get","close","post","withFirebase","server","TradeText","style","marginTop","marginBottom","radioStyle","display","justifyContent","textAlign","BuyModal","props","confirmLoading","setConfirmLoading","type","setType","symbol","setSymbol","quantity","setQuantity","price","setPrice","onOk","makeTrade","then","reset","res","setVisible","activePositions","pos","firebase","auth","currentUser","uid","incrementBalance","val","b","userId","amount","balance","setBalance","mult","sort","a","trade","user","shareCount","positions","long","position","ticker","initial","remaining","isLong","openDate","Date","visible","height","fontSize","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport Autocomplete from \"./Autocomplete\";\nimport AntRadio from \"./AntRadio\";\nimport AntInput from \"./AntInput\";\nimport { get, close, post } from \"../Helpers\";\nimport { withFirebase } from \"../Firebase\";\nimport { server } from \"../../links\";\nimport TradeText from \"./TradeText\";\n\nconst style = { marginTop: \"2vh\", marginBottom: \"1vh\" };\nconst radioStyle = {\n  marginTop: \"2vh\",\n  marginBottom: \"1vh\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n};\n\nfunction BuyModal(props) {\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [type, setType] = useState(0);\n  const [symbol, setSymbol] = useState(props.symbol);\n  const [quantity, setQuantity] = useState(0);\n  const [price, setPrice] = useState(props.price);\n\n  function onOk() {\n    setConfirmLoading(true);\n    makeTrade().then(reset);\n  }\n\n  useEffect(() => {\n    if (props.price) {\n      setPrice(props.price);\n    } else if (symbol) {\n      get(\n        \"https://finnhub.io/api/v1/quote?symbol=\" +\n          symbol +\n          \"&token=bpleiinrh5r8m26im1dg\"\n      ).then((res) => {\n        if (res) {\n          setPrice(res[\"c\"] * 100);\n        }\n      });\n    } else {\n      setPrice(\"\");\n    }\n  }, [symbol, props.price]);\n\n  function reset() {\n    props.setVisible(false);\n    setConfirmLoading(false);\n    setType(0);\n    if (!props.symbol) {\n      setSymbol(\"\");\n    }\n    if (!props.price) {\n      setPrice(\"\");\n    }\n    setQuantity(0);\n  }\n\n  async function activePositions() {\n    let pos;\n    await get(\n      server +\n        \"positions/id=\" +\n        props.firebase.auth.currentUser.uid +\n        \"/ticker=\" +\n        symbol +\n        \"/active\"\n    ).then((res) => {\n      pos = res;\n    });\n\n    return pos;\n  }\n\n  function incrementBalance(val) {\n    let b = {\n      userId: props.firebase.auth.currentUser.uid,\n      amount: props.balance + val,\n    };\n\n    post(server + \"balances/\", b).then(() => {\n      props.setBalance(b.amount);\n    });\n  }\n\n  async function makeTrade() {\n    if (type === 1 || type === 3) {\n      let mult = type === 1 ? 1 : -1;\n      activePositions().then((res) => {\n        res.sort((a, b) => {\n          return mult * (a[\"price\"] - b[\"price\"]);\n        });\n        let trade = {\n          user: props.firebase.auth.currentUser.uid,\n          type: type,\n          price: price,\n          shareCount: quantity,\n          positions: res,\n        };\n        close(trade, incrementBalance);\n      });\n    } else {\n      let long = type !== 2;\n\n      let position = {\n        ticker: symbol,\n        price: price,\n        initial: quantity,\n        remaining: quantity,\n        userId: props.firebase.auth.currentUser.uid,\n        isLong: long,\n        openDate: new Date(),\n      };\n\n      post(server + \"positions/\", position);\n      if (long) {\n        incrementBalance(-1 * quantity * price);\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title=\"Make a Trade\"\n      visible={props.visible}\n      destroyOnClose\n      footer={[\n        <Button key=\"back\" onClick={reset}>\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          loading={confirmLoading}\n          onClick={onOk}\n          disabled={!symbol || !quantity}\n        >\n          Confirm\n        </Button>,\n      ]}\n      closable={false}\n    >\n      <div\n        style={{\n          height: \"2vh\",\n          fontSize: \"24px\",\n          marginBottom: \"5vh\",\n          textAlign: \"center\",\n        }}\n      >\n        {price ? (price / 100).toFixed(2) : \"\"}\n      </div>\n      <div style={style}>\n        {props.symbol ? null : (\n          <Autocomplete\n            setSymbol={setSymbol}\n            setQuantity={setQuantity}\n            width=\"100%\"\n          ></Autocomplete>\n        )}\n      </div>\n\n      <AntInput\n        setVal={setQuantity}\n        balance={props.balance}\n        price={price}\n        quantity={quantity}\n        type={type}\n        ticker={symbol}\n        style={style}\n      ></AntInput>\n      <AntRadio\n        labels={[\"Buy\", \"Sell\", \"Short\", \"Cover Short\"]}\n        setVal={(val) => {\n          if (val !== type) {\n            setQuantity(0);\n          }\n          setType(val);\n        }}\n        style={radioStyle}\n      ></AntRadio>\n      <TradeText\n        symbol={symbol}\n        quantity={quantity}\n        price={price}\n        balance={props.balance}\n        type={type}\n        style={style}\n      ></TradeText>\n    </Modal>\n  );\n}\n\nexport default withFirebase(BuyModal);\n"]},"metadata":{},"sourceType":"module"}