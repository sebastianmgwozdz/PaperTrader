{"ast":null,"code":"var _jsxFileName = \"/Users/sebastiangwozdz/Desktop/papertrader/src/CompaniesComponents/PriceCounter.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { get } from \"../Helpers\";\nimport \"./PriceCounter.css\";\nimport { Skeleton } from \"antd\";\nimport { isOpen } from \"../Helpers\";\nexport default function PriceCounter(props) {\n  const [currPrice] = useState([-1]);\n  const [tick, setTick] = useState(0);\n\n  function update() {\n    get(\"https://finnhub.io/api/v1/quote?symbol=\" + props.ticker + \"&token=bpleiinrh5r8m26im1dg\").then(res => {\n      if (res) {\n        let col = color(res);\n        let pr = document.getElementById(\"price\");\n\n        if (pr && col) {\n          pr.classList.add(col);\n          currPrice[0] = res;\n          setTick(tick => tick + 1);\n          setTimeout(() => {\n            pr.classList.remove(col);\n          }, 2000);\n        } else {\n          currPrice[0] = res;\n          setTick(tick => tick + 1);\n        }\n\n        if (props.setPrice) {\n          props.setPrice(res);\n        }\n      }\n    });\n  }\n\n  function color(updated) {\n    if (currPrice.length < 1 || Math.abs(updated[\"c\"] - currPrice[0][\"c\"]) < 0.01) {\n      return \"\";\n    } else if (updated[\"c\"] > currPrice[0][\"c\"]) {\n      return \"flashGreen\";\n    } else {\n      return \"flashRed\";\n    }\n  }\n\n  useEffect(() => {\n    update();\n    let t = setInterval(() => {\n      if (isOpen(new Date())) {\n        update();\n      }\n    }, 5000);\n    return () => {\n      clearInterval(t);\n    };\n  }, []);\n  let pr = document.getElementById(\"price\");\n\n  if (pr && tick === 1 && pr.classList.length === 1) {\n    pr.classList.remove(pr.classList.value);\n  }\n\n  let element = currPrice[0][\"c\"] ? currPrice[0][\"c\"].toFixed(2) : /*#__PURE__*/React.createElement(Skeleton.Input, {\n    style: {\n      width: \"270px\",\n      height: \"60px\"\n    },\n    active: true,\n    size: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"40px\",\n      marginTop: \"10px\"\n    },\n    id: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, element);\n}","map":{"version":3,"sources":["/Users/sebastiangwozdz/Desktop/papertrader/src/CompaniesComponents/PriceCounter.js"],"names":["React","useState","useEffect","get","Skeleton","isOpen","PriceCounter","props","currPrice","tick","setTick","update","ticker","then","res","col","color","pr","document","getElementById","classList","add","setTimeout","remove","setPrice","updated","length","Math","abs","t","setInterval","Date","clearInterval","value","element","toFixed","width","height","textAlign","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { get } from \"../Helpers\";\nimport \"./PriceCounter.css\";\nimport { Skeleton } from \"antd\";\nimport { isOpen } from \"../Helpers\";\n\nexport default function PriceCounter(props) {\n  const [currPrice] = useState([-1]);\n  const [tick, setTick] = useState(0);\n\n  function update() {\n    get(\n      \"https://finnhub.io/api/v1/quote?symbol=\" +\n        props.ticker +\n        \"&token=bpleiinrh5r8m26im1dg\"\n    ).then((res) => {\n      if (res) {\n        let col = color(res);\n        let pr = document.getElementById(\"price\");\n        if (pr && col) {\n          pr.classList.add(col);\n          currPrice[0] = res;\n          setTick((tick) => tick + 1);\n          setTimeout(() => {\n            pr.classList.remove(col);\n          }, 2000);\n        } else {\n          currPrice[0] = res;\n          setTick((tick) => tick + 1);\n        }\n        if (props.setPrice) {\n          props.setPrice(res);\n        }\n      }\n    });\n  }\n\n  function color(updated) {\n    if (\n      currPrice.length < 1 ||\n      Math.abs(updated[\"c\"] - currPrice[0][\"c\"]) < 0.01\n    ) {\n      return \"\";\n    } else if (updated[\"c\"] > currPrice[0][\"c\"]) {\n      return \"flashGreen\";\n    } else {\n      return \"flashRed\";\n    }\n  }\n\n  useEffect(() => {\n    update();\n    let t = setInterval(() => {\n      if (isOpen(new Date())) {\n        update();\n      }\n    }, 5000);\n    return () => {\n      clearInterval(t);\n    };\n  }, []);\n\n  let pr = document.getElementById(\"price\");\n  if (pr && tick === 1 && pr.classList.length === 1) {\n    pr.classList.remove(pr.classList.value);\n  }\n\n  let element = currPrice[0][\"c\"] ? (\n    currPrice[0][\"c\"].toFixed(2)\n  ) : (\n    <Skeleton.Input\n      style={{ width: \"270px\", height: \"60px\" }}\n      active={true}\n      size={\"default\"}\n    />\n  );\n\n  return (\n    <div\n      style={{ textAlign: \"center\", fontSize: \"40px\", marginTop: \"10px\" }}\n      id=\"price\"\n    >\n      {element}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}